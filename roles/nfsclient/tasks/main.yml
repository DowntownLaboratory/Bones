---
- name: install nfs-common
  apt:
    name: ["nfs-common={{ nfs_common_version }}"]
    state: present
    update_cache: true
- name: lock nfs-common version to {{ nfs_common_version }}
  command: "/usr/bin/apt-mark hold nfs-common"
- name: create our home nfs directory
  file:
    path: "{{ nfs_client_home_directory }}"
    state: directory
- name: create the general nfs directory
  file:
    path: "{{ nfs_client_general_directory }}"
    state: directory
- name: mount nfs general directory on boot
  lineinfile:
    path: /etc/fstab
    line: "{{ hostvars[item]['ansible_default_ipv4'].address }}:{{ nfs_server_general_directory }} {{ nfs_client_general_directory }} nfs auto,_netdev,nofail,noatime,nolock,intr,tcp,actimeo=1800 0 0"
  with_items: "{{ groups['nfsserver'] }}"
  register: mount_general_directory_on_boot
- name: mount nfs home directory on boot
  lineinfile:
    path: /etc/fstab
    line: "{{ hostvars[item]['ansible_default_ipv4'].address }}:{{ nfs_server_home_directory }} {{ nfs_client_home_directory }} nfs auto,_netdev,nofail,noatime,nolock,intr,tcp,actimeo=1800 0 0"
  with_items: "{{ groups['nfsserver'] }}"
  register: mount_home_directory_on_boot
  # TODO: This service is a work because fstab isn't waiting for the network.
- name: copy mount-nfs.service
  become: true
  become_user: root
  copy:
    src: mount-nfs.service
    dest: /etc/systemd/system/mount-nfs.service
    backup: yes
  register: copy_mount_service
- name: enable mount-nfs.service
  systemd:
    name: mount-nfs.service
    enabled: yes
    daemon_reexec : yes
  when: copy_mount_service.changed
- name: reboot system
  reboot:
    reboot_timeout: 120
  when: copy_mount_service.changed or mount_home_directory_on_boot.changed or mount_general_directory_on_boot.changed
- name: get disk filesystem info
  command: df -h
  register: disk_filesystem_info
- name: print disk filesystem info
  debug:
    var: disk_filesystem_info.stdout_lines
