---
- name: Configure Manager Node {{ kubernetes_version }}
  block:
    - name: Reset Kubernetes Manager
      command: kubeadm reset -f
      register: kubeadm_reset
    - name: Initialize Primary Manager Controller Node 
      shell: kubeadm init --control-plane-endpoint "{{ virtual_ip }}:{{ virtual_server_port }}" --upload-certs
      register: kubeadm_init
      # if we capture the kubeadm_init response as a variable
      # we can select the main kubeadm join command w/ regex:
      # (?s)(?<=control-plane node running the following command on each as root:\n\n).+?(?=Please note that)
      # we can select the worker node kubeadm join command w/ regex:
      # (?s)(?<=worker nodes by running the following on each as root:\n\n).+?(?=\Z)
    - name: Create Fact for K8s Backup Node Join command
      # with all of the escaping the regex variables look kinda ugly but they're escaping "\\n" and new lines or returns.
      set_fact: control_plane_join_command="{{ kubeadm_init.stdout | regex_replace('(\\\\\\n)', '') | regex_replace('(\\n|\\r)', '') | regex_search('(?s)(?<=control-plane node running the following command on each as root:).+?(?=Please)') }}"
    - name: Create Fact for K8s compute node join command
      set_fact: compute_plane_join_command="{{ kubeadm_init.stdout | regex_replace('(\\\\\\n)', '') | regex_replace('(\\n|\\r)', '') | regex_search('(?s)(?<=worker nodes by running the following on each as root:).+?(?=\\Z)') }}"
    - name: create Kubernetes config directory
      file:
        path: /root/.kube/
        state: directory
        owner: root
        group: root
        mode: 0755
    - name: copy admin.conf to config directory
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /root/.kube/config
        owner: root
        group: root
        mode: 0755
        remote_src: yes
        backup: yes
    - name: create infrastructure file directory
      file:
        path: /root/infrastructure/
        state: directory
        owner: root
        group: root
        mode: 0755
    - name: copy over all infrastructure files
      copy:
        src: infrastructure/{{ item }}
        dest: /root/infrastructure/{{ item }}
      loop: 
        - "lets-encrypt-issuer.yaml"
        - "metallb-config.yaml"
        - "nfs-client-provisioner-1.0.0.tgz"
    - name: create services file directory
      file:
        path: /root/services/
        state: directory
        owner: root
        group: root
        mode: 0755
    - name: copy over all services files
      copy:
        src: services/{{ item }}
        dest: /root/services/{{ item }}
      loop: 
        - "mariadb-1.0.0.tgz"
        - "nats-1.0.0.tgz"
        - "nfs-client-provisioner-test-1.0.0.tgz"
        - "postgres-1.0.0.tgz"
        - "prometheus-1.0.0.tgz"
        - "redis-1.0.0.tgz"
  when: kubernetes_installed is changed