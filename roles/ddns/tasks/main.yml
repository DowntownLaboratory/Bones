- name: Start DDNS w/ docker-compose inline.
  gather_facts: no
  tasks:
    - community.general.docker_compose:
        project_src: ddns
        state: absent
    - community.general.docker_compose:
        project_name: ddns
        definition:
          version: '2'
          services:
            root-domain-ddns:
              image: oznu/cloudflare-ddns:latest
              restart: always
              environment:
                - API_KEY="{{ cloud_flare_api_key }}"
                - ZONE="{{ domain_name }}"
            www-subdomain-ddns:
              image: oznu/cloudflare-ddns:latest
              restart: always
              environment:
                - API_KEY= {{ cloud_flare_api_key }}
                - ZONE=" {{ domain_name }} "
                - SUBDOMAIN=www
            faas-domain-ddns:
              image: oznu/cloudflare-ddns:latest
              restart: always
              environment:
                - API_KEY="{{ cloud_flare_api_key }}"
                - ZONE="{{ domain_name }}"
                - SUBDOMAIN="{{ faas_subdomain }}"
            blog-domain-ddns:
              image: oznu/cloudflare-ddns:latest
              restart: always
              environment:
                - API_KEY="{{ cloud_flare_api_key }}"
                - ZONE="{{ domain_name }}"
                - SUBDOMAIN="{{ blog_subdomain }}"
            api-domain-ddns:
              image: oznu/cloudflare-ddns:latest
              restart: always
              environment:
                - API_KEY="{{ cloud_flare_api_key }}"
                - ZONE="{{ domain_name }}"
                - SUBDOMAIN="{{ api_subdomain }}"
            info-domain-ddns:
              image: oznu/cloudflare-ddns:latest
              restart: always
              environment:
                - API_KEY="{{ cloud_flare_api_key }}"
                - ZONE="{{ domain_name }}"
                - SUBDOMAIN="{{ info_subdomain }}"
      register: output
    - ansible.builtin.debug:
        var: output
    - ansible.builtin.assert:
        that:
          - "web.flask_web_1.state.running"
          - "db.flask_db_1.state.running"